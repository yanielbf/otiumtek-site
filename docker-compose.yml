services:
  inbucket:
    image: inbucket/inbucket:latest
    container_name: otiumtek-inbucket
    ports:
      - "9000:9000" # Web UI
      - "2500:2500" # SMTP
      - "1100:1100" # POP3
      - "1430:1430" # IMAP
    environment:
      - INBUCKET_SMTP_DISABLED=false
      - INBUCKET_POP3_DISABLED=false
      - INBUCKET_IMAP_DISABLED=false
      - INBUCKET_WEB_DISABLED=false
      - INBUCKET_WEB_BASE_PATH=/
      - INBUCKET_WEB_COOKIE_AUTH_KEY=otiumtek-dev-secret-key
    volumes:
      - inbucket_data:/var/inbucket
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: otiumtek-minio
    ports:
      - "9001:9000" # MinIO API
      - "9002:9001" # MinIO Console
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_ACCESS_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped

  createbuckets:
    image: alpine:latest
    container_name: otiumtek-create-buckets
    depends_on:
      - minio
    environment:
      - MC_HOST_minio=http://${S3_ACCESS_KEY_ID}:${S3_SECRET_ACCESS_KEY}@minio:9000
    command: >
      sh -c "
        apk add --no-cache curl &&
        curl -o /tmp/mc https://dl.min.io/client/mc/release/linux-amd64/mc &&
        chmod +x /tmp/mc &&
        /tmp/mc alias set minio http://minio:9000 ${S3_ACCESS_KEY_ID} ${S3_SECRET_ACCESS_KEY} &&
        /tmp/mc mb minio/${S3_BUCKET} || true &&
        /tmp/mc mb minio/${S3_PRIVATE_BUCKET} || true &&
        /tmp/mc policy set public minio/${S3_BUCKET} &&
        echo 'Buckets created successfully'
      "
    restart: "no"

  postgres:
    image: postgres:17-alpine
    container_name: otiumtek-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=otiumtek_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  inbucket_data:
  minio_data:
  postgres_data:
